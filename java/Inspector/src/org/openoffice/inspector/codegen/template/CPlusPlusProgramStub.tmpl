// This program stub was automatically created by
// OpenOffice.org Object Inspector Extension.
// See http://api.openoffice.org/ for more information.

#include <stdio.h>

#include <cppuhelper/bootstrap.hxx>
#include <com/sun/star/bridge/XUnoUrlResolver.hpp>
#include <com/sun/star/lang/XMultiServiceFactory.hpp>
 
%includes

using namespace com::sun::star::uno;
using namespace com::sun::star::lang;
using namespace com::sun::star::bridge;
using namespace rtl;
using namespace cppu;
 
int main(int argc, char* argv[])
{
  // create the initial component context
  Reference<XComponentContext> rComponentContext =
    defaultBootstrap_InitialComponentContext();

  // retrieve the service manager from the context
  Reference<XMultiComponentFactory> rServiceManager = 
    rComponentContext->getServiceManager();

  // instantiate a sample service with the service manager.
  Reference<XInterface> rInstance = 
    rServiceManager->createInstanceWithContext( 
      OUString::createFromAscii("com.sun.star.bridge.UnoUrlResolver" ),
      rComponentContext);

  // Query for the XUnoUrlResolver interface
  Reference<XUnoUrlResolver> rResolver(rInstance, UNO_QUERY);
  
  if(!rResolver.is())
  {
    printf("Error: Couldn't instantiate com.sun.star.bridge.UnoUrlResolver service\n");
    return 1;
  }

  %code

  try
  {
    // resolve the uno-URL
    rInstance = rResolver->resolve(OUString::createFromAscii( 
      "uno:socket,host=localhost,port=2002;urp;StarOffice.ServiceManager"));
 
    if(!rInstance.is())
    {
      printf("StarOffice.ServiceManager is not exported from remote process\n");
      return 1;
    }

    // query for the simpler XMultiServiceFactory interface, sufficient for scripting
    Reference<XMultiServiceFactory> rOfficeServiceManager(rInstance, UNO_QUERY);

    if(!rOfficeServiceManager.is())
    {
      printf("XMultiServiceFactory interface is not exported\n");
      return 1;
    }

    printf("Connected sucessfully to the office\n");
  }
  catch(Exception &e)
  {
    OString o = OUStringToOString( e.Message, RTL_TEXTENCODING_ASCII_US );
    printf( "Error: %s\n", o.pData->buffer );
    return 1;
  }
  return 0;
}