/*************************************************************************
 *  The Contents of this file are made available subject to the terms of
 *  the BSD license.
 *  
 *  Copyright (c) 2008 by Sun Microsystems, Inc.
 *  All rights reserved.
 *
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *  1. Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *  2. Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *  3. Neither the name of Sun Microsystems, Inc. nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *  "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 *  FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *  COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 *  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
 *  OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 *  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR
 *  TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE
 *  USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *     
 *************************************************************************/

package com.sun.star.script.ook.editor;

import com.sun.star.frame.XModel;
import com.sun.star.script.framework.container.ScriptMetaData;
import com.sun.star.script.ook.OokInterpreter;
import com.sun.star.script.ook.editor.OokScriptEditor;
import com.sun.star.script.provider.XScriptContext;
import com.sun.star.text.XText;
import com.sun.star.text.XTextDocument;
import com.sun.star.text.XTextRange;
import com.sun.star.uno.UnoRuntime;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import javax.swing.JOptionPane;

/**
 *
 * @author  Christian Lins (christian.lins@web.de)
 */
public class OokScriptEditorFrame extends javax.swing.JFrame 
{

  private XScriptContext scriptContext  = null;
  private ScriptMetaData scriptMetaData = null;
  
    /** Creates new form OokScriptEditorFrame */
    public OokScriptEditorFrame(XScriptContext scriptContext, ScriptMetaData scriptMetaData) 
    {
      this.scriptContext  = scriptContext;
      this.scriptMetaData = scriptMetaData;
      initComponents();
      
      // Retrieve macro source code from meta data
      try
      {
        BufferedReader in = new BufferedReader(
          new InputStreamReader(scriptMetaData.getSourceURL().openStream()));
        StringBuffer buf = new StringBuffer();
        for(;;)
        {
          String line = in.readLine();
          if(line == null)
            break;
          buf.append(line);
          buf.append('\n');
        }
        this.txtMacroSource.setText(buf.toString());
      }
      catch(IOException ex)
      {
        JOptionPane.showMessageDialog(this, ex.getMessage());
      }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    toolBar = new javax.swing.JToolBar();
    btnSave = new javax.swing.JButton();
    btnTemplate = new javax.swing.JButton();
    btnRun = new javax.swing.JButton();
    editorScrollPane = new javax.swing.JScrollPane();
    txtMacroSource = new javax.swing.JEditorPane();

    setTitle("Ook Macro Editor");

    toolBar.setRollover(true);

    btnSave.setText("Save");
    btnSave.setFocusable(false);
    btnSave.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnSave.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    btnSave.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnSaveActionPerformed(evt);
      }
    });
    toolBar.add(btnSave);

    btnTemplate.setText("Template");
    btnTemplate.setFocusable(false);
    btnTemplate.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnTemplate.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    btnTemplate.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnTemplateActionPerformed(evt);
      }
    });
    toolBar.add(btnTemplate);

    btnRun.setText("Run");
    btnRun.setFocusable(false);
    btnRun.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
    btnRun.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
    btnRun.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        btnRunActionPerformed(evt);
      }
    });
    toolBar.add(btnRun);

    txtMacroSource.setBackground(java.awt.Color.white);
    editorScrollPane.setViewportView(txtMacroSource);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(toolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 553, Short.MAX_VALUE)
      .addComponent(editorScrollPane)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(toolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(editorScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 398, Short.MAX_VALUE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

private void btnTemplateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTemplateActionPerformed
  this.txtMacroSource.setText(OokScriptEditor.TEMPLATE_HELLO);
}//GEN-LAST:event_btnTemplateActionPerformed

private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
  try
  {
    OutputStream out = this.scriptMetaData.getSourceURL().openConnection().getOutputStream();
    out.write(this.txtMacroSource.getText().getBytes());
    out.flush();
    out.close();
  }
  catch(Exception ex)
  {
    JOptionPane.showMessageDialog(this, ex.getMessage());
  }
}//GEN-LAST:event_btnSaveActionPerformed

private void btnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRunActionPerformed
  try
  {
    OokInterpreter ook = new OokInterpreter(this.txtMacroSource.getText());
    ook.run();
    
    System.out.println(ook.getOutput());

    // Write out to Office
    XModel xDocModel = scriptContext.getDocument();

    // getting the text document object
    XTextDocument xtextdocument = (XTextDocument) UnoRuntime.queryInterface(
      XTextDocument.class, xDocModel);
    
    XText xText = xtextdocument.getText();
    XTextRange xTextRange = xText.getEnd();
    xTextRange.setString(ook.getOutput());
  }
  catch(IOException ex)
  {
    JOptionPane.showMessageDialog(this, ex.getLocalizedMessage());
  }
}//GEN-LAST:event_btnRunActionPerformed


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JButton btnRun;
  private javax.swing.JButton btnSave;
  private javax.swing.JButton btnTemplate;
  private javax.swing.JScrollPane editorScrollPane;
  private javax.swing.JToolBar toolBar;
  private javax.swing.JEditorPane txtMacroSource;
  // End of variables declaration//GEN-END:variables

}
